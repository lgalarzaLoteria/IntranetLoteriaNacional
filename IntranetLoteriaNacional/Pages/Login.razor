@page "/"
@page "/login"

@layout LoginLayout


@using Blazored.LocalStorage
@using IntranetLoteriaNacional.Shared.ComponentModels
@using IntranetLoteriaNacional.Shared.Constants 
@using LoteriaNacionalDominio
@using System.Net
@using static LoteriaNacionalDominio.SeguridadDTO


@inject NavigationManager _navigation
@inject ILocalStorageService _session
@inject ProjectHttpClient _httpClient
@inject SweetAlertService Swal

<style>
    #div__container {
        width: 100%;
        height: 100%;
        background-position: 0% 0% !important;
        background-size: 100% 100% !important;
        background-repeat: no-repeat !important;
        /* background: url(./images/login-bg.png); */
    }

    #div__login-container {
        right: 64vh; 
        bottom: 20vh;
        width: 60vh;
        padding: 13vh;
        position: fixed;
        text-align: center;
        border-radius: 12px;
        background-color: white;
        /* box-shadow: 4px 7px 31px -9px black;  */
    }
</style>

<div id="div__container">
    <div id="div__login-container">
        <div style="padding: 20px; background-color: white;">
            <img style="width: 200px" src="./images/loterialogo.png" />
        </div>
        <span style="color: var(--ph-skyblue);font-size: 25px;">Iniciar sesión</span>
        <input type="text" @bind-value="@Username" @onkeyup="@Enter" class="mt-4 form-control mb-2" placeholder="Usuario" aria-label="Username" aria-describedby="basic-addon1">
        <input type="password" @onkeyup="@Enter" class="form-control mb-4" @bind-value="@Password" placeholder="Contrasena" aria-label="Username" onke aria-describedby="basic-addon1">
        <button @onclick="TryLogin" style="background-color: var(--ph-skyblue)" class="btn btn-primary mb-1">Ingresar</button>
        <br />
        <a style="font-size: 10px !important;" href="#" class="link-secondary">Learn more</a>
    </div>
</div>

<Loading @ref="loader"></Loading>

@code {
    /*************** VARIABLES LOCALES *******************/
    Loading loader { get; set; } = new();
    /******************************************************/
    public string Username { get; set; } = null!;
    public string Password { get; set; } = null!;
    public string Message { get; set; } = null!;
    private bool _isInvalid;


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var user = await _session.GetItemAsync<string>("user");
            if (user != null && user != "")
            {
                _navigation.NavigateTo("~/Home/Home");
            }
            await loader.Close();

        }
    }

    private async Task TryLogin()
    {
        await loader.Show();
        string localIP = string.Empty;
        LoginDTO login = new LoginDTO();
        login.UserName = Username;
        login.Password = Password;
        try
        {
            var existeUsuario = await _httpClient.PostAsJsonAsync<LoginRespuestaDTO>(EndPoints.validarUsuario,login);

            if(existeUsuario!=null)
            {
                var respuestaRolUsuario = await _httpClient.PostAsJsonAsync<MenuDTO>(EndPoints.obtieneRolUsuario, login);

                if(respuestaRolUsuario == null)
                {
                    Message = "Usuario no tiene rol de acceso en el sistema, por favor comuníquese con el administrador";
                    await loader.Close();
                    _isInvalid = true;
                    await Swal.FireAsync(new SweetAlertOptions
                        {
                            ConfirmButtonColor = "var(--ph-skyblue)",
                            Title = "Intranet Lotería Nacional",
                            Text = Message,
                            Icon = "error"
                        });
                        return;
                }

                string rolUsuario = respuestaRolUsuario[0].nombreRol;
                string PDSUsuario = string.Empty;

                if(rolUsuario=="Comisionista")
                {
                    // LoginDTO login1 = new LoginDTO();
                    // login1.UserName = "lzambrano";
                    var respuestaPDSUsuario = await _httpClient.PostAsJsonAsync<LoginRespuestaDTO>(EndPoints.obtienePDSUsuario, login);
                    PDSUsuario = respuestaPDSUsuario[0].NombreUsuario;
                }  

                await _session.SetItemAsync("nombreUsuario", existeUsuario[0].NombreUsuario);
                await _session.SetItemAsync("codigoUsuario", login.UserName);
                await _session.SetItemAsync("PDSUsuario", PDSUsuario);
                await _session.SetItemAsync("RolUsuario", rolUsuario);

                IPHostEntry host = Dns.GetHostEntry(Dns.GetHostName());// objeto para guardar la ip
                foreach (IPAddress ip in host.AddressList)
                {
                    if (ip.AddressFamily.ToString() == "InterNetwork")
                    {
                        localIP = ip.ToString();// esta es nuestra ip
                    }
                }
                await _session.SetItemAsync("equipoTransaccion", localIP);
                var menuUsuario = await _httpClient.PostAsJsonAsync<MenuDTO>(EndPoints.obtieneMenuUsuario, login);
                if (menuUsuario==null)
                {
                    Message = "Usuario no tiene permisos para acceder al sistema, por favor comuníquese con el administrador";
                    await loader.Close();
                    _isInvalid = true;
                    await Swal.FireAsync(new SweetAlertOptions
                    {
                        ConfirmButtonColor = "var(--ph-skyblue)",
                        Title = "Intranet Lotería Nacional",
                        Text = Message,
                        Icon = "error"
                    });          
                }
                else
                {
                    await _session.SetItemAsync<MenuDTO[]>("_userMenu", menuUsuario);
                    _navigation.NavigateTo("./Home/Home");
                    switch (rolUsuario)
                    {
                        case "Comisionista":
                            _navigation.NavigateTo("./StoreCheck/Promociones");
                            break;
                        case "Supervisor PDS":
                            _navigation.NavigateTo("./StoreCheck/Revision");
                            break;
                            case "Jefe Comercial":
                            _navigation.NavigateTo("./StoreCheck/JefaturaVentas");
                            break;
                        case "Gerencia":
                            _navigation.NavigateTo("./StoreCheck/RankingPDS");
                            break;
                        default:
                            _navigation.NavigateTo("./Home/Home");
                            break;
                    }
                }

            }
            else
            {
                Message = " Clave incorrecta o Usuario no existe en el sistema, por favor comuníquese con el administrador";
                await loader.Close();
                _isInvalid = true;
                await Swal.FireAsync(new SweetAlertOptions
                    {
                        ConfirmButtonColor = "var(--ph-skyblue)",
                        Title = "Intranet Lotería Nacional",
                        Text = Message,
                        Icon = "error"
                    });
            }
        }
        catch (Exception ex)
        {
            _isInvalid = true;
            Message = ex.Message;
            await loader.Close();
            StateHasChanged();
        }
    }
    public async Task Enter(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
        {
            await TryLogin();
        }
    }
    
}



